package ro.scoalaPeterThal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import repository.BookRepository;
import repository.GenreRepository;
import basics.*;
import java.util.List;
@Controller
public class BookContrl {
	@Autowired
	BookRepository bookRepository;
	
	@Autowired
	GenreRepository genreRepository;
	@GetMapping("/books1")
	public String BooksList() {
		return "bookslist";
	}
	 public List<Genre> getAllGenres() {
	        return genreRepository.findAll();
	    }
	 public List<Book> searchBooks(String title, String author, Long genreId, Integer publicationYear) {
		 Genre genre = null;
	        
	        // Dacă 'genreId' este furnizat, căutăm obiectul 'Genre'
	        if (genreId != null) {
	            genre = genreRepository.findById(genreId).orElse(null);
	        }
	        System.out.println(title);
	        if (title != null && !title.isEmpty()) {
	            return bookRepository.findByTitleContainingAndAuthorContainingAndGenreIdAndPublicationYear(title, author, genreId, publicationYear);
	        } else {
	        	List<Book> searchBooks= bookRepository.findAll();
	        }
	    }
	 @GetMapping("/books")
	    public String showBooks(
	            @RequestParam(value = "title", required = false) String title,
	            @RequestParam(value = "author", required = false) String author,
	            @RequestParam(value = "genre", required = false) Long genreId,
	            @RequestParam(value = "publicationYear", required = false) Integer publicationYear,
	            Model model) {
	        
	        model.addAttribute("books", searchBooks(title, author, genreId, publicationYear));
	        model.addAttribute("genres", getAllGenres());  // Trimiterea genurilor
	        return "bookslist";
	    }

	    // Metoda AJAX pentru căutare în timp real
	    @GetMapping("/searchBooks")
	    @ResponseBody
	    public List<Book> searchBooksAjax(
	            @RequestParam(value = "title", required = false) String title,
	            @RequestParam(value = "author", required = false) String author,
	            @RequestParam(value = "genre", required = false) Long genre,
	            @RequestParam(value = "publicationYear", required = false) Integer publicationYear) {
	        
	        return searchBooks(title, author, genre, publicationYear);
	    }
}
